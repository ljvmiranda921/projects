title: "Exclusive Spancat Benchmark"
description: |
  This project aims to compare the `spancat`, `ner`, and `exclusive_spancat`
  components on different span labeling datasets. In order to access the datasets,
  you first need to clone the [`spancat-datasets`](https://github.com/explosion/spancat-datasets)
  repository:

  ```sh
  # Clone the spancat-datasets repo to access the datasets
  git clone git@github.com:explosion/spancat-datasets.git
  ```

  and run the necessary conversion scripts. For example, let's perform the
  conversion command for the [Anatomical Entity Mention (AnEM)](http://www.nactem.ac.uk/anatomy/)
  corpus:

  ```sh
  # While inside the spancat-datasets repository
  spacy project run anem
  ```

  This will generate the spaCy files that you can use for training. Once done,
  you **should copy these files to this project**. For example, you can perform
  a directory copy in Linux via:

  ```sh
  cp -r spancat-datasets/corpus/spancat/*. exclusive_spancat_benchmark/corpus/. 
  ```

  You can now supply the local path to the commands and workflows to
  perform experiments in **this project:**

  ```sh
  # Perform experiments in the ner_embeddings project
  spacy project run train . --vars.dataset anem

vars:
  dataset: anem
  gpu_id: 0
  seed: 42
  batch_size: 1000
  config: spancat
  language: en
  vectors: en_core_web_lg

directories:
  - "assets"
  - "configs"
  - "corpus"
  - "scripts"

commands:
  - name: "download-models"
    help: "Download spaCy models for their word-embeddings."
    script:
      - "python -m spacy download en_core_web_lg"
      - "python -m spacy download es_core_news_lg"
      - "python -m spacy download nl_core_news_lg"

  - name: "train"
    help: "Train a spancat model."
    script:
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --nlp.lang ${vars.language}
        --output training/${vars.dataset}/${vars.config}/
        --paths.train corpus/${vars.dataset}-train.spacy
        --paths.dev corpus/${vars.dataset}-dev.spacy
        --paths.vectors ${vars.vectors}
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu_id}
    deps:
      - corpus/${vars.dataset}-train.spacy
      - corpus/${vars.dataset}-dev.spacy
    outputs:
      - training/${vars.dataset}/${vars.config}/model-best
      - training/${vars.dataset}/${vars.config}/model-last

  - name: "evaluate"
    help: "Evaluate a spancat model."
    script:
      - mkdir -p metrics/${vars.dataset}/${vars.config}/
      - >-
        python -m spacy evaluate
        training/${vars.dataset}/${vars.config}/model-best
        corpus/${vars.dataset}-dev.spacy
        --output metrics/${vars.dataset}/${vars.config}/dev_scores.json
        --gpu-id ${vars.gpu_id}
      - >-
        python -m spacy evaluate
        training/${vars.dataset}/${vars.config}/model-best
        corpus/${vars.dataset}-test.spacy
        --output metrics/${vars.dataset}/${vars.config}/test_scores.json
        --gpu-id ${vars.gpu_id}
